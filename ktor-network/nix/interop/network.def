package=io.ktor.network.interop
---
#include <sys/select.h>
#include <arpa/inet.h>
#include <errno.h>

static inline void select_fd_add(int descriptor, fd_set* set) {
    FD_SET(descriptor, set);
}

static inline void select_fd_clear(fd_set *set) {
    FD_ZERO(set);
}

static inline int select_fd_isset(int descriptor, fd_set* set) {
    return FD_ISSET(descriptor, set);
}

int write_to_pipe(int descriptor) {
    char buf[1];
    buf[0] = 7;
    return write(descriptor, buf, 1);
}

int read_from_pipe(int descriptor) {
    int result = 0;
    int count = 0;
    char buf[1024];

    while (1) {
        result = read(descriptor, buf, 1024);
        if (result < 0) {
            if (errno != EAGAIN) {
                return errno;
            } else {
                return count;
            }
        }
        if (result == 0) {
            return count;
        }
        count += result;
    }
    return count;
}
